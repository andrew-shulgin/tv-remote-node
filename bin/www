#!/usr/bin/env node
"use strict";

var app = require('../app');
var http = require('http');
var fs = require('fs');

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = http.createServer(app);

server.listen(port, function () {
    if (isNaN(port)) {
        if (process.env.CHMOD) {
            fs.chmodSync(port, process.env.CHMOD);
        }
    }
});
server.on('error', onError);

function normalizePort(val) {
    var port = parseInt(val, 10);

    // named pipe
    if (isNaN(port)) {
        fs.existsSync(val) && fs.unlinkSync(val);
        return val;
    }

    // port number
    if (port >= 0) {
        return port;
    }

    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}